// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movie_Characters_API.Models;

namespace MovieCharacters_API.Migrations
{
    [DbContext(typeof(MovieApiDbContext))]
    [Migration("20220206071747_rebooting")]
    partial class rebooting
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieCharacter", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.HasKey("MoviesId", "CharactersId");

                    b.HasIndex("CharactersId");

                    b.ToTable("MovieCharacter");

                    b.HasData(
                        new
                        {
                            MoviesId = 1,
                            CharactersId = 1
                        },
                        new
                        {
                            MoviesId = 2,
                            CharactersId = 2
                        },
                        new
                        {
                            MoviesId = 3,
                            CharactersId = 3
                        });
                });

            modelBuilder.Entity("Movie_Characters_API.Models.Domain.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Gender")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Monkey",
                            FirstName = "Gorilla",
                            Gender = "Male",
                            LastName = "Monk",
                            Picture = "url"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "SuperMan",
                            FirstName = "Adam",
                            Gender = "Male",
                            LastName = "Monk",
                            Picture = "url"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Marvel",
                            FirstName = "Anthony",
                            Gender = "Male",
                            LastName = "Monk",
                            Picture = "url"
                        });
                });

            modelBuilder.Entity("Movie_Characters_API.Models.Domain.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "G&K movies ar very entertaining and abit scary.",
                            Name = "G&K"
                        },
                        new
                        {
                            Id = 2,
                            Description = "American superhero film featuring the Marvel Comics character Venom,",
                            Name = "Venom"
                        },
                        new
                        {
                            Id = 3,
                            Description = " Movie is Based on the Marvel Comics superhero of the same name",
                            Name = "Dare"
                        });
                });

            modelBuilder.Entity("Movie_Characters_API.Models.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("PictureURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Adam Wingard",
                            FranchiseId = 1,
                            PictureURL = "https://viniloblog.com/wp-content/uploads/2021/02/godzilla-vs-kong-luchan.jpg",
                            ReleaseYear = 2021,
                            Title = "Godzilla vs. Kong",
                            TrailerUrl = "https://youtu.be/4adYOnlWYQg?t=21"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Andy Serkis",
                            FranchiseId = 2,
                            PictureURL = "https://tse4.mm.bing.net/th/id/OIP.Ji1Doi8I9f8DrIxEW33BFwHaFj?pid=ImgDet&rs=1",
                            ReleaseYear = 2021,
                            Title = "Venom: Let There Be Carnage",
                            TrailerUrl = "https://www.imdb.com/video/vi1533394969?playlistId=tt7097896&ref_=tt_pr_ov_vi"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Mark Steven Johnson",
                            FranchiseId = 3,
                            PictureURL = "https://i.ytimg.com/vi/7VZAiCvenmo/maxresdefault.jpg",
                            ReleaseYear = 2003,
                            Title = "Daredevil",
                            TrailerUrl = "https://www.imdb.com/video/vi2778726681?playlistId=tt0287978&ref_=tt_ov_vi"
                        });
                });

            modelBuilder.Entity("MovieCharacter", b =>
                {
                    b.HasOne("Movie_Characters_API.Models.Domain.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movie_Characters_API.Models.Domain.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Movie_Characters_API.Models.Domain.Movie", b =>
                {
                    b.HasOne("Movie_Characters_API.Models.Domain.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("Movie_Characters_API.Models.Domain.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
